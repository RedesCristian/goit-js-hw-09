{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,UAChCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBAEtC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbR,EAAOgB,iBAAiB,UAAUC,IAChCA,EAAEC,iBACF,MAAMC,EAAaC,SAASjB,EAAWkB,OACjCC,EAAYF,SAAShB,EAAUiB,OAC/BE,EAAcH,SAASf,EAAOgB,OAC9BG,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAaE,IAAK,CACpC,MAAMlB,EAAWkB,EAAI,EACfjB,EAAQc,EAAYG,EAAIN,EAC9BK,EAASE,KAAKpB,EAAcC,EAAUC,G,CAGxCgB,EAASG,SAAQC,IACfA,EACGC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAAhC,GAASiC,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAGnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAAhC,GAASiC,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,GAE/C,GACJ","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst button = document.querySelector('button');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nbutton.addEventListener('submit', e => {\n  e.preventDefault();\n  const delayValue = parseInt(firstDelay.value);\n  const stepValue = parseInt(delayStep.value);\n  const amountValue = parseInt(amount.value);\n  const promises = [];\n\n  for (let i = 0; i < amountValue; i++) {\n    const position = i + 1;\n    const delay = stepValue * i + delayValue;\n    promises.push(createPromise(position, delay));\n  }\n\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  });\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$button","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delayValue","parseInt","value","stepValue","amountValue","promises","i","push","forEach","promise","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.35fd8192.js.map"}